name: win vcpkg
run-name: ${{ github.actor }} is testing out GitHub Actions üöÄ
on: [push]
jobs:
  Explore-GitHub-Actions:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [amd64]
        ssl: [ ON ]   
    steps:
      - run: echo "üéâ The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "üêß This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "üîé The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Restore vcpkg packages
        working-directory: ${{env.GITHUB_WORKSPACE}}
        run: |
            powershell Invoke-WebRequest -OutFile vcpkg2023.zip https://github.com/microsoft/vcpkg/archive/refs/tags/2023.12.12.zip
            unzip vcpkg2023.zip
            cd vcpkg-2023.12.12
            bootstrap-vcpkg.bat
            vcpkg integrate install
            vcpkg integrate project
            vcpkg install
            cd ${{ github.workspace }}
            powershell Invoke-WebRequest -OutFile zlib.zip https://www.zlib.net/zlib13.zip
            unzip zlib.zip
            Move-Item -Path ./zlib-1.3 -Destination ./zlib
            cd zlib
            cmake .
            make
            cd ${{ github.workspace }}  
      # - uses: xmake-io/github-action-setup-xmake@v1
      #   with:
      #     xmake-version: branch@dev
      - run: echo "üí° The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "üñ•Ô∏è The workflow is now ready to test your code on the runner."
      # - name: download mysql
      #   run: |
      #      powershell Invoke-WebRequest -OutFile mysql.zip https://dev.mysql.com/get/Downloads/MySQL-8.0/mysql-8.0.35-winx64.zip
      #      unzip mysql.zip
      #      Move-Item -Path ./mysql-8.0.35-winx64/include -Destination ./
      #      Move-Item -Path ./mysql-8.0.35-winx64/lib -Destination ./ 
      #     ls include
      - name: Install ninja-build tool
        uses: seanmiddleditch/gha-setup-ninja@v3

      - name: List files in the repository
        run: |
          unzip asio.zip
          ls ${{ github.workspace }}
      - run: echo "üçè This job's status is ${{ job.status }}."  
      - name: Build
        run: |
          cmake . -B ${{github.workspace}} -DENABLE_WIN_VCPKG=ON -DENABLE_VCPKG=ON -DCMAKE_TOOLCHAIN_FILE=D:/a/paozhu/paozhu/vcpkg-2023.12.12/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=x64-windows -DCMAKE_BUILD_TYPE=Debug -G Ninja
      - name: Build
        run: cmake --build ${{github.workspace}} --config Debug
